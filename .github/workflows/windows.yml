on:
  push:
    branches: [test-actions]
  pull_request:
name: Build for Windows
jobs:
  windows:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: mingw-w64-ucrt-x86_64-gtk4 mingw-w64-ucrt-x86_64-libadwaita mingw-w64-ucrt-x86_64-python-gobject mingw-w64-ucrt-x86_64-python-yaml mingw-w64-ucrt-x86_64-python-requests mingw-w64-ucrt-x86_64-python-pillow mingw-w64-ucrt-x86_64-desktop-file-utils mingw-w64-ucrt-x86_64-ca-certificates mingw-w64-ucrt-x86_64-meson git
      - name: Compile
        shell: msys2 {0}
        run: |
          meson setup _build
          ninja -C _build install
          pacman --noconfirm -Rs mingw-w64-ucrt-x86_64-desktop-file-utils mingw-w64-ucrt-x86_64-meson git
          find /ucrt64/share/locale/ -type f ! -name "*cartridges.mo" -delete
      - name: "Inno Setup"
        run: iscc ".\_build\Cartridges.iss"
      - name: "Upload Artifact"
        uses: actions/upload-artifact@v3
        with:
          name: Installer
          path: _build/Output/Cartridges Setup.exe

  publish-release:
      name: Publish Release
      if: startsWith(github.ref, 'refs/tags/')
      needs: windows
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Download workflow artifact
          uses: dawidd6/action-download-artifact@v2.27.0
          with:
            workflow: windows.yml
            workflow_conclusion: success

        - name: Get release notes
          shell: python
          run: |
            import re, textwrap
            open_file = open("./data/hu.kramo.Cartridges.metainfo.xml.in", "r", encoding="utf-8")
            string = open_file.read()
            open_file.close()
            string = re.findall("<release.*>\s*<description.*>\n([\s\S]*?)\s*</description>\s*<\/release>", string)[0]
            string = textwrap.dedent(string)
            open_file = open("release_notes", "w", encoding="utf-8")
            open_file.write(string)
            open_file.close()

        - name: Get tag name
          id: get_tag_name
          run: echo tag_name=${GITHUB_REF#refs/tags/} >> $GITHUB_OUTPUT

        - name: Publish release
          uses: softprops/action-gh-release@v0.1.15
          with:
            files: Installer/Cartridges Setup.exe
            fail_on_unmatched_files: true
            tag_name: ${{ steps.get_tag_name.outputs.tag_name }}
            body_path: release_notes
            draft: true